import ws from 'ws'
import { format } from 'util'

let handler = async (m, { conn }) => {
  let uniqueUsers = new Map()

  if (!global.conns || !Array.isArray(global.conns)) {
    global.conns = []
  }

  // Recolectar subs activos (por número)
  global.conns.forEach(connSub => {
    if (connSub.user && connSub.ws?.socket?.readyState !== ws.CLOSED) {
      let jid = connSub.user.jid
      let numero = jid?.split('@')[0]
      let nombre = connSub.user?.name || `Usuario ${numero}`
      uniqueUsers.set(jid, nombre)
    }
  })

  const uptime = process.uptime() * 1000
  const formatUptime = clockString(uptime)
  const totalUsers = uniqueUsers.size

  // Decoración Michi-Wa
  let txt = `❀ *Subs Activos de Michi-Wa* ✦\n\n`
  txt += `> ✦ *Tiempo activo:* ${formatUptime}\n`
  txt += `> ✦ *Subs conectados:* ${totalUsers}\n`

  if (totalUsers > 0) {
    txt += `\n❀ *Lista de Subs Conectados:* ✦\n\n`
    let i = 1
    for (let [jid, nombre] of uniqueUsers) {
      let numero = jid.split('@')[0]
      txt += `✦ *${i++}.* ${nombre}\n> ❀ wa.me/${numero}\n\n`
    }
  } else {
    txt += `\n> ❀ No hay subbots conectados por ahora.`
  }

  await conn.reply(m.chat, txt.trim(), m)
}

handler.command = ['listjadibot', 'bots']
handler.help = ['bots']
handler.tags = ['serbot']
export default handler

function clockString(ms) {
  let h = Math.floor(ms / 3600000)
  let m = Math.floor((ms % 3600000) / 60000)
  let s = Math.floor((ms % 60000) / 1000)
  return [h, m, s].map(v => v.toString().padStart(2, '0')).join(':')
}